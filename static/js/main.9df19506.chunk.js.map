{"version":3,"sources":["Paragraph.js","Links.js","Inventory.js","Room.js","RoomController.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["Paragraph","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","text","props","slice","newText","constructor","Array","i","length","item","variable","substring","variables","description","split","map","paragraph","index","react_default","a","createElement","className","Component","Links","currentLinks","links","handleClick","hiddenLinks","hidden","keys","arr","link","bools","inventory","hasOwnProperty","changes","updates","setBools","true","false","oldObj","obj","JSON","parse","stringify","prop","startsWith","status","gameover","isArray","action","destination","includes","onClick","push","Inventory","_this","itemsPresent","inv","default","used","_loop","condition","conditions","room","roomKey","conditionsMet","name","Room","extra","extraText","p","Paragraph_Paragraph","resetGame","startGame","firstRoom","linksClick","startRoom","id","Inventory_Inventory","invClick","Links_Links","softLinks","softLinksClick","RoomController","call","state","hiddenSoftLinks","followLink","bind","assertThisInitialized","softLink","createRoom","invLink","dest","setState","updateVars","concat","toConsumableArray","defineProperty","output","equals","game","roomLocation","rooms","currentRoom","Room_Room","soft_links","Game","componentDidMount","initVars","home","start","updateInv","rawVar","preset","random","Math","floor","perm","permutation","values","names","newValue","object","copy","updateObject","old","RoomController_RoomController","App","Game_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9df19506.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class Paragraph extends Component {\n\trender() {\n\t\tconst text = this.props.text.slice();\n\t\tlet newText = \"\";\n\n\t\t// If the description is in an array, this is because it has variables\n\t\t// Find the variables and splice them in.\n\t\tif (text.constructor === Array) {\n\t\t\tfor (let i = 0; i < text.length; i++) {\n\t\t\t\tlet item = text[i];\n\t\t\t\tif (item[0] === \"$\") {\n\t\t\t\t\tlet variable = item.substring(1);\n\t\t\t\t\titem = this.props.variables[variable];\n\t\t\t\t}\n\t\t\t\tnewText += item;\n\t\t\t}\n\t\t} else {\n\t\t\tnewText = text;\n\t\t}\n\n\t\tconst description = newText\n\t\t\t.split(\"\\n\")\n\t\t\t.map((paragraph, index) => <p key={index}>{paragraph}</p>);\n\n\t\treturn <div className=\"flavor-text\">{description}</div>;\n\t}\n}\n","import React, { Component } from \"react\";\n\nexport class Links extends Component {\n  render() {\n    let currentLinks = this.props.links;\n    var handleClick = this.props.handleClick;\n    let hiddenLinks = this.props.hidden;\n\n    if (!currentLinks) return null;\n\n    // Assigns the function passed from <App /> to each respective link\n    // Returns array of <li>'s with proper actions when you click them\n    const links = Object.keys(currentLinks).map((key, index) => {\n      let arr = [];\n      let link = currentLinks[key];\n\n      // Does it change any game.state bools?\n      let bools = { inventory: {} };\n\t  if (link.hasOwnProperty(\"updates\")) {\n\t\tconst changes = link.updates;\n\t\tif (changes.hasOwnProperty(\"true\"))\n\t\t\tbools = setBools(bools, changes.true, true);\n\t\tif (changes.hasOwnProperty(\"false\"))\n\t\t\tbools = setBools(bools, changes.false, false);\n\t  }\n\n\t  function setBools(oldObj, props, value) {\n\t\tlet obj = JSON.parse(JSON.stringify(oldObj));\n\t\tfor (let i in props) {\n\t\t\tlet prop = props[i];\n\t\t\tif (prop.startsWith(\"inventory.\")) {\n\t\t\t\tobj.inventory[prop.substring(10)] = {status: value};\n\t\t\t} else obj[prop] = value;\n\t\t}\n\t\treturn obj;\n\t  }\n\n      // Is it a game over?\n      const gameover = (!Array.isArray(link.action) &&\n                        link.action.startsWith(\"gameover.\"))\n                        ? true : false;\n      const destination = gameover ? link.action.substring(9) : link.action;\n\n      // Generate the button\n      let item;\n      if (!hiddenLinks || !hiddenLinks.includes(index)) {\n        item = (\n          <li key={index}>\n            <button\n              onClick={() => handleClick(destination, index, bools, gameover)}\n            >\n              {link.text}\n            </button>\n          </li>\n        );\n        arr.push(item);\n      }\n      return arr;\n    });\n\n    return <ul>{links}</ul>;\n  }\n}\n","import React, { Component } from \"react\";\n\nexport class Inventory extends Component {\n  render() {\n    const handleClick = this.props.handleClick;\n\n    let itemsPresent = false;\n    const inv = this.props.inventory;\n    let arr = Object.keys(inv).map((key, index) => {\n      let item = inv[key];\n      let text = item.default;\n      let destination = '';\n      let gameover = false;\n      let used = false;\n\n      // Use conditions\n      for (let i in item.conditions) {\n        const condition = item.conditions[i];\n\n        const conditionsMet = () => {\n          if (condition.room !== this.props.roomKey) return false;\n          if (condition.hasOwnProperty(\"true\"))\n            for (let i in condition.true)\n              if (this.props.variables[condition.true[i]] !== true)\n                return false;\n          if (condition.hasOwnProperty(\"false\"))\n            for (let i in condition.false)\n              if (this.props.variables[condition.false[i]] !== false)\n                return false;\n          return true;\n        }\n\n        if (conditionsMet()) {\n          text = '';\n          used = condition.used;\n          destination = condition.destination;\n          if (destination.startsWith('gameover.')) {\n            destination = destination.substring(9);\n            gameover = true;\n          }\n          break;\n        }\n      }\n\n      if (item.status) {\n        itemsPresent = true;\n        return (\n        <li key={index} className=\"inv\">\n          <button\n            onClick={() => handleClick(text, key, gameover, destination, used)}>\n            {item.name}\n          </button>\n        </li>\n      )} else return null;\n    });\n    if (itemsPresent) {\n      return (\n        <div>\n        <ul>\n          <li className=\"inv\">Inventory:</li>\n          {arr}\n        </ul>\n        </div>\n      );\n    } else return <ul>{arr}</ul>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Paragraph } from \"./Paragraph.js\";\nimport { Links } from \"./Links.js\";\nimport { Inventory } from \"./Inventory.js\";\n\nexport class Room extends Component {\n  render() {\n    let extraText = this.props.extraText;\n\n    // Map extra text insto series of <p>\n    const extra = extraText.map((p, index) => (\n      <Paragraph key={index} text={p} variables={this.props.variables} />\n    ));\n\n    const gameover = this.props.gameover ? (\n      <button onClick={() => this.props.resetGame()}>Reset</button>\n    ) : (\n      \"\"\n    );\n\n    const startGame = this.props.firstRoom ? (\n      <button onClick={() => this.props.linksClick(this.props.startRoom)}>\n        Start game\n      </button>\n    ) : (\n      \"\"\n    );\n\n    const inventory = (this.props.firstRoom || this.props.gameover) ? (\n      \"\"\n    ) : (\n      <div id=\"inventory\">\n      <Inventory\n\t  \tinventory={this.props.variables.inventory}\n\t\thandleClick={this.props.invClick}\n\t\troomKey={this.props.roomKey}\n    variables={this.props.variables}\n\t  />\n    </div>\n    );\n\n    return (\n      <div className=\"room\">\n        <h1 className=\"room-name\">{this.props.room.name}</h1>\n        <Paragraph\n          text={this.props.room.description}\n          variables={this.props.variables}\n        />\n        {extra}\n        <Links\n          links={this.props.softLinks}\n          handleClick={this.props.softLinksClick}\n          hidden={this.props.hidden}\n          variables={this.props.variables}\n        />\n        <Links\n          links={this.props.links}\n          handleClick={this.props.linksClick}\n          variables={this.props.variables}\n        />\n        {inventory}\n        {gameover}\n        {startGame}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Room } from \"./Room.js\";\n\n/*\n  RoomController.js is like the view for this program.\n  It resets the view without changing the state of the current game.\n  It calls upon all the different things that might show up on the screen.\n*/\n\nexport class RoomController extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: \"home\", // Starting room will need to come from props in future, see resetGame()\n      extraText: [],\n      hiddenSoftLinks: [],\n      gameover: false\n    };\n\n    this.followLink = this.followLink.bind(this);\n    this.softLink = this.softLink.bind(this);\n    this.createRoom = this.createRoom.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n  \tthis.invLink = this.invLink.bind(this);\n  }\n\n  // Allows <Links /> to update state of <App />\n  followLink(dest, key, bools, gameover) {\n    this.setState({\n      room: dest,\n      extraText: [],\n      hiddenSoftLinks: [],\n      gameover: gameover\n    });\n    this.props.updateVars(bools);\n  }\n\n  softLink(text, key, bools, gameover) {\n    this.setState({\n      extraText: [...this.state.extraText, text],\n      hiddenSoftLinks: [...this.state.hiddenSoftLinks, key],\n      gameover: gameover\n    });\n    this.props.updateVars(bools);\n  }\n\n  invLink(text, item, gameover, destination, used) {\n\t  this.setState({\n\t\t  extraText: [...this.state.extraText, text],\n\t\t  gameover: gameover\n\t  });\n    if (destination !== '') this.setState({ \n      room: destination,\n      extraText: []\n    });\n    if (used) this.props.updateVars({ 'inventory': {[item]: false} });\n  }\n\n  createRoom(room, output) {\n    for (let i in room) {\n      if (i === \"conditions\" || i === \"true\" || i === \"false\" || i === \"equals\") continue;\n      output[i] = room[i];\n    }\n    if (room.hasOwnProperty(\"conditions\")) {\n      for (let i in room.conditions) {\n        let condition = room.conditions[i];\n        if (\n          (condition.hasOwnProperty(\"true\") &&\n            this.props.variables[condition.true]) ||\n          (condition.hasOwnProperty(\"false\") &&\n            !this.props.variables[condition.false]) ||\n          (condition.hasOwnProperty(\"equals\") &&\n            this.props.variables[condition.equals[0]] === condition.equals[1])\n        )\n          this.createRoom(condition, output);\n      }\n    }\n  }\n\n  resetGame() {\n    this.setState({\n      room: this.props.startRoom,\n      gameover: false\n    });\n    this.props.resetGame();\n  }\n\n  render() {\n    const game = this.props.game;\n    const roomLocation = this.state.gameover ? game.rooms.gameover : game.rooms;\n    let currentRoom = {};\n    this.createRoom(roomLocation[this.state.room], currentRoom);\n    const firstRoom = this.state.room === \"home\" ? true : false;\n\n    return (\n      <Room\n        room={currentRoom}\n        extraText={this.state.extraText}\n        variables={this.props.variables}\n        softLinks={currentRoom.soft_links}\n        softLinksClick={this.softLink}\n        hidden={this.state.hiddenSoftLinks}\n        links={currentRoom.links}\n        linksClick={this.followLink}\n\t\tinvClick={this.invLink}\n\t\troomKey={this.state.room}\n        resetGame={this.resetGame}\n        gameover={this.state.gameover}\n        firstRoom={firstRoom}\n        startRoom={this.props.startRoom}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { RoomController } from \"./RoomController.js\";\n\n/*\n\tGame.js represents an instance of the game.\n\tWhen the user gets a Game Over or restarts on their own, it is reloaded,\n\tresetting all of the playthrough-specific variables.\n*/\n\nexport class Game extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tstartRoom: this.props.game.rooms.home.start,\n\t\t\tvariables: {}\n\t\t};\n\n\t\tthis.updateVars = this.updateVars.bind(this);\n\t\tthis.initVars = this.initVars.bind(this);\n\t\tthis.updateInv = this.updateInv.bind(this);\n\t}\n\n\tcomponentDidMount = () => this.initVars();\n\n\t// Creating randomized variables\n\tinitVars() {\n\t\tconst rawVar = this.props.game.variables;\n\t\tlet variables = this.state.variables;\n\n\t\t// Preset variables\n\t\tlet preset = rawVar.preset;\n\t\tfor (let key in preset) {\n\t\t\tvariables[preset[key].name] = preset[key].value;\n\t\t}\n\n\t\t// Variables with randomly selected values\n\t\tlet random = rawVar.random;\n\t\tfor (let key in random) {\n\t\t\tvariables[random[key].name] =\n\t\t\t\trandom[key].value[Math.floor(Math.random() * random[key].value.length)];\n\t\t}\n\n\t\t// Multiple variables with randomly selected values\n\t\t// Pulling from the same pool, with no repeats\n\t\tlet perm = rawVar.permutation;\n\t\tfor (let key in perm) {\n\t\t\tlet values = [];\n\t\t\tlet names = perm[key].names;\n\t\t\t// Add random, non-repeating values\n\t\t\tfor (let i = 0; i < names.length; i++) {\n\t\t\t\tlet newValue;\n\t\t\t\tdo {\n\t\t\t\t\tnewValue =\n\t\t\t\t\t\tperm[key].values[\n\t\t\t\t\t\t\tMath.floor(Math.random() * perm[key].values.length)\n\t\t\t\t\t\t];\n\t\t\t\t} while (values.includes(newValue));\n\t\t\t\tvalues.push(newValue);\n\t\t\t}\n\t\t\t// Add them to the object\n\t\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\t\tvariables[perm[key].names[i]] = values[i];\n\t\t\t}\n\t\t}\n\n\t\t// Inventory\n\t\tconst inv = JSON.parse(JSON.stringify(this.props.game.inventory));\n\t\tvariables.inventory = inv;\n\t\tthis.setState({\n\t\t\tvariables: variables,\n\t\t\tinventory: inv\n\t\t});\n\t}\n\n\tupdateInv(object) {\n\t\tlet copy = JSON.parse(JSON.stringify(this.state.variables));\n\t\tfor (let i in object) copy[i] = object[i];\n\t\tthis.setState({ variables: copy });\n\t}\n\n\tupdateVars(object) {\n\n\t\tconst updateObject = (old, obj) => {\n\t\t\tlet copy = JSON.parse(JSON.stringify(old));\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (typeof obj[i] === \"object\")\n\t\t\t\t\tcopy[i] = updateObject(copy[i], obj[i]);\n\t\t\t\t\telse copy[i] = obj[i];\n\t\t\t}\n\t\t\treturn copy;\n\t\t};\n\n\t\tconst copy = updateObject(this.state.variables, object);\n\t\tthis.setState({ variables: copy });\n\t}\n\n\trender() {\n\t\tconst game = this.props.game;\n\t\treturn (\n\t\t\t<RoomController\n\t\t\t\tgame={game}\n\t\t\t\tvariables={this.state.variables}\n\t\t\t\tupdateVars={this.updateVars}\n\t\t\t\tupdateInv={this.updateInv}\n\t\t\t\tresetGame={this.initVars}\n\t\t\t\tstartRoom={this.state.startRoom}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport game from \"./game.json\";\nimport \"./App.css\";\nimport { Game } from \"./Game.js\";\n\n/*\n  App.js is the whole app.\n  It is set up to run a particular game, found in game.json.\n  It sends that game to Game.js, which creates an instance of the game.\n*/\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Game game={game} />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}